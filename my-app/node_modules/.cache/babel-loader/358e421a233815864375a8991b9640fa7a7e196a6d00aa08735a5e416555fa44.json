{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\n// Define a service using a base URL and expected endpoints\nexport const userAuthApi = createApi({\n  reducerPath: 'userAuthApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'http://127.0.0.1:8000/auth/api/signup/'\n  }),\n  endpoints: builder => ({\n    registerUser: builder.mutation({\n      query: user => {\n        return {\n          url: 'register/',\n          method: 'POST',\n          body: user,\n          headers: {\n            'Content-type': 'application/json'\n          }\n        };\n      }\n    }),\n    loginUser: builder.mutation({\n      query: user => {\n        return {\n          url: 'login/',\n          method: 'POST',\n          body: user,\n          headers: {\n            'Content-type': 'application/json'\n          }\n        };\n      }\n    }),\n    getLoggedUser: builder.query({\n      query: access_token => {\n        return {\n          url: 'profile/',\n          method: 'GET',\n          headers: {\n            'authorization': `Bearer ${access_token}`\n          }\n        };\n      }\n    }),\n    changeUserPassword: builder.mutation({\n      query: ({\n        actualData,\n        access_token\n      }) => {\n        return {\n          url: 'changepassword/',\n          method: 'POST',\n          body: actualData,\n          headers: {\n            'authorization': `Bearer ${access_token}`\n          }\n        };\n      }\n    }),\n    sendPasswordResetEmail: builder.mutation({\n      query: user => {\n        return {\n          url: 'send-reset-password-email/',\n          method: 'POST',\n          body: user,\n          headers: {\n            'Content-type': 'application/json'\n          }\n        };\n      }\n    }),\n    resetPassword: builder.mutation({\n      query: ({\n        actualData,\n        id,\n        token\n      }) => {\n        return {\n          url: `/reset-password/${id}/${token}/`,\n          method: 'POST',\n          body: actualData,\n          headers: {\n            'Content-type': 'application/json'\n          }\n        };\n      }\n    })\n  })\n});\nexport const {\n  useRegisterUserMutation,\n  useLoginUserMutation,\n  useGetLoggedUserQuery,\n  useChangeUserPasswordMutation,\n  useSendPasswordResetEmailMutation,\n  useResetPasswordMutation\n} = userAuthApi;","map":{"version":3,"names":["createApi","fetchBaseQuery","userAuthApi","reducerPath","baseQuery","baseUrl","endpoints","builder","registerUser","mutation","query","user","url","method","body","headers","loginUser","getLoggedUser","access_token","changeUserPassword","actualData","sendPasswordResetEmail","resetPassword","id","token","useRegisterUserMutation","useLoginUserMutation","useGetLoggedUserQuery","useChangeUserPasswordMutation","useSendPasswordResetEmailMutation","useResetPasswordMutation"],"sources":["/Users/jenishmanandhar/djangoapi/my-app/src/services/userAuthApi.jsx"],"sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\n\n// Define a service using a base URL and expected endpoints\nexport const userAuthApi = createApi({\n  reducerPath: 'userAuthApi',\n  baseQuery: fetchBaseQuery({ baseUrl: 'http://127.0.0.1:8000/auth/api/signup/' }),\n  endpoints: (builder) => ({\n    registerUser: builder.mutation({\n      query: (user) => {\n        return {\n          url: 'register/',\n          method: 'POST',\n          body: user,\n          headers: {\n            'Content-type': 'application/json',\n          }\n        }\n      }\n    }),\n    loginUser: builder.mutation({\n      query: (user) => {\n        return {\n          url: 'login/',\n          method: 'POST',\n          body: user,\n          headers: {\n            'Content-type': 'application/json',\n          }\n        }\n      }\n    }),\n    getLoggedUser: builder.query({\n      query: (access_token) => {\n        return {\n          url: 'profile/',\n          method: 'GET',\n          headers: {\n            'authorization': `Bearer ${access_token}`,\n          }\n        }\n      }\n    }),\n    changeUserPassword: builder.mutation({\n      query: ({ actualData, access_token }) => {\n        return {\n          url: 'changepassword/',\n          method: 'POST',\n          body: actualData,\n          headers: {\n            'authorization': `Bearer ${access_token}`,\n          }\n        }\n      }\n    }),\n    sendPasswordResetEmail: builder.mutation({\n      query: (user) => {\n        return {\n          url: 'send-reset-password-email/',\n          method: 'POST',\n          body: user,\n          headers: {\n            'Content-type': 'application/json',\n          }\n        }\n      }\n    }),\n    resetPassword: builder.mutation({\n      query: ({ actualData, id, token }) => {\n        return {\n          url: `/reset-password/${id}/${token}/`,\n          method: 'POST',\n          body: actualData,\n          headers: {\n            'Content-type': 'application/json',\n          }\n        }\n      }\n    }),\n  }),\n})\n\nexport const { useRegisterUserMutation, useLoginUserMutation, useGetLoggedUserQuery, useChangeUserPasswordMutation, useSendPasswordResetEmailMutation, useResetPasswordMutation } = userAuthApi"],"mappings":"AAAA,SAASA,SAAS,EAAEC,cAAc,QAAQ,8BAA8B;;AAExE;AACA,OAAO,MAAMC,WAAW,GAAGF,SAAS,CAAC;EACnCG,WAAW,EAAE,aAAa;EAC1BC,SAAS,EAAEH,cAAc,CAAC;IAAEI,OAAO,EAAE;EAAyC,CAAC,CAAC;EAChFC,SAAS,EAAGC,OAAO,KAAM;IACvBC,YAAY,EAAED,OAAO,CAACE,QAAQ,CAAC;MAC7BC,KAAK,EAAGC,IAAI,IAAK;QACf,OAAO;UACLC,GAAG,EAAE,WAAW;UAChBC,MAAM,EAAE,MAAM;UACdC,IAAI,EAAEH,IAAI;UACVI,OAAO,EAAE;YACP,cAAc,EAAE;UAClB;QACF,CAAC;MACH;IACF,CAAC,CAAC;IACFC,SAAS,EAAET,OAAO,CAACE,QAAQ,CAAC;MAC1BC,KAAK,EAAGC,IAAI,IAAK;QACf,OAAO;UACLC,GAAG,EAAE,QAAQ;UACbC,MAAM,EAAE,MAAM;UACdC,IAAI,EAAEH,IAAI;UACVI,OAAO,EAAE;YACP,cAAc,EAAE;UAClB;QACF,CAAC;MACH;IACF,CAAC,CAAC;IACFE,aAAa,EAAEV,OAAO,CAACG,KAAK,CAAC;MAC3BA,KAAK,EAAGQ,YAAY,IAAK;QACvB,OAAO;UACLN,GAAG,EAAE,UAAU;UACfC,MAAM,EAAE,KAAK;UACbE,OAAO,EAAE;YACP,eAAe,EAAG,UAASG,YAAa;UAC1C;QACF,CAAC;MACH;IACF,CAAC,CAAC;IACFC,kBAAkB,EAAEZ,OAAO,CAACE,QAAQ,CAAC;MACnCC,KAAK,EAAEA,CAAC;QAAEU,UAAU;QAAEF;MAAa,CAAC,KAAK;QACvC,OAAO;UACLN,GAAG,EAAE,iBAAiB;UACtBC,MAAM,EAAE,MAAM;UACdC,IAAI,EAAEM,UAAU;UAChBL,OAAO,EAAE;YACP,eAAe,EAAG,UAASG,YAAa;UAC1C;QACF,CAAC;MACH;IACF,CAAC,CAAC;IACFG,sBAAsB,EAAEd,OAAO,CAACE,QAAQ,CAAC;MACvCC,KAAK,EAAGC,IAAI,IAAK;QACf,OAAO;UACLC,GAAG,EAAE,4BAA4B;UACjCC,MAAM,EAAE,MAAM;UACdC,IAAI,EAAEH,IAAI;UACVI,OAAO,EAAE;YACP,cAAc,EAAE;UAClB;QACF,CAAC;MACH;IACF,CAAC,CAAC;IACFO,aAAa,EAAEf,OAAO,CAACE,QAAQ,CAAC;MAC9BC,KAAK,EAAEA,CAAC;QAAEU,UAAU;QAAEG,EAAE;QAAEC;MAAM,CAAC,KAAK;QACpC,OAAO;UACLZ,GAAG,EAAG,mBAAkBW,EAAG,IAAGC,KAAM,GAAE;UACtCX,MAAM,EAAE,MAAM;UACdC,IAAI,EAAEM,UAAU;UAChBL,OAAO,EAAE;YACP,cAAc,EAAE;UAClB;QACF,CAAC;MACH;IACF,CAAC;EACH,CAAC;AACH,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEU,uBAAuB;EAAEC,oBAAoB;EAAEC,qBAAqB;EAAEC,6BAA6B;EAAEC,iCAAiC;EAAEC;AAAyB,CAAC,GAAG5B,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}