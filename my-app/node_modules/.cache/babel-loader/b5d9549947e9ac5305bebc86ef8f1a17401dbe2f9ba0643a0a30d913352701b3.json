{"ast":null,"code":"var _jsxFileName = \"/Users/jenishmanandhar/djangoapi/my-app/src/pages/Signup.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '/Users/jenishmanandhar/djangoapi/my-app/src/Signup.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Signup() {\n  _s();\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (formData.password !== formData.confirmPassword) {\n      setError(\"Passwords do not match\");\n      return;\n    }\n    try {\n      const response = await axios.post('http://127.0.0.1:8000/auth/api/signup/', formData);\n      console.log('Signup successful:', response.data);\n      // Redirect to login page or show a success message\n    } catch (error) {\n      console.error('Signup failed:', error);\n      if (error.response && error.response.data) {\n        // If error response exists and contains data, set error message\n        setError(error.response.data.message || \"An error occurred during signup.\");\n      } else {\n        // If no error response or data, set a generic error message\n        setError(\"An error occurred during signup.\");\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      placeholder: \"Username\",\n      value: formData.username,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      placeholder: \"Email\",\n      value: formData.email,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Password\",\n      value: formData.password,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"confirmPassword\",\n      placeholder: \"Confirm Password\",\n      value: formData.confirmPassword,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 7\n  }, this);\n}\n_s(Signup, \"C8JkRwow48b3f/h78XgMK1SCbJU=\");\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Signup","_s","formData","setFormData","username","email","password","confirmPassword","handleChange","e","target","name","value","handleSubmit","preventDefault","setError","response","post","console","log","data","error","message","onSubmit","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jenishmanandhar/djangoapi/my-app/src/pages/Signup.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport '/Users/jenishmanandhar/djangoapi/my-app/src/Signup.css';\nimport axios from 'axios';\n\nfunction Signup() {\n  const [formData, setFormData] = useState({\n      username: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n  });\n\n  const handleChange = (e) => {\n      setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (formData.password !== formData.confirmPassword) {\n        setError(\"Passwords do not match\");\n        return;\n    }\n    try {\n        const response = await axios.post('http://127.0.0.1:8000/auth/api/signup/', formData);\n        console.log('Signup successful:', response.data);\n        // Redirect to login page or show a success message\n    } catch (error) {\n        console.error('Signup failed:', error);\n        if (error.response && error.response.data) {\n            // If error response exists and contains data, set error message\n            setError(error.response.data.message || \"An error occurred during signup.\");\n        } else {\n            // If no error response or data, set a generic error message\n            setError(\"An error occurred during signup.\");\n        }\n    }\n};\n\n  return (\n      <form onSubmit={handleSubmit}>\n          <input type=\"text\" name=\"username\" placeholder=\"Username\" value={formData.username} onChange={handleChange} />\n          <input type=\"email\" name=\"email\" placeholder=\"Email\" value={formData.email} onChange={handleChange} />\n          <input type=\"password\" name=\"password\" placeholder=\"Password\" value={formData.password} onChange={handleChange} />\n          <input type=\"password\" name=\"confirmPassword\" placeholder=\"Confirm Password\" value={formData.confirmPassword} onChange={handleChange} />\n          <button type=\"submit\">Sign Up</button>\n      </form>\n  );\n}\n\n\nexport default Signup;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}